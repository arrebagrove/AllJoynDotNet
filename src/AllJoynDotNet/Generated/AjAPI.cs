// Generated from AjAPI.h

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;

namespace AllJoynDotNet
{
		/// <summary>
		/// Used to specify if an interface is part of an About announcement or not.
		/// </summary>
		/// 
		internal enum alljoyn_about_announceflag
		{
		
		UNANNOUNCED, ///< The interface is not announced
		ANNOUNCED    ///< The interface is announced
		
		}
		// typedef enum {
		// UNANNOUNCED, ///< The interface is not announced
		// ANNOUNCED    ///< The interface is announced
		// } alljoyn_about_announceflag;
		// 

//
    public partial class AjAPI : AllJoynWrapper
    {
        internal AjAPI(IntPtr handle) : base(handle) { }
		/// <summary>
		/// Unity-specific function to process alternate-thread callbacks on the main thread.
		/// </summary>
		/// <returns>the number of callbacks processed.</returns>
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern IntPtr alljoyn_unity_deferred_callbacks_process();
		// extern AJ_API int AJ_CALL alljoyn_unity_deferred_callbacks_process();

		/// <summary>
		/// Enable/disable main thread callback behavior.
		/// </summary>
		/// 
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern void alljoyn_unity_set_deferred_callback_mainthread_only(Int32 mainthread_only);
		// extern AJ_API void AJ_CALL alljoyn_unity_set_deferred_callback_mainthread_only(QCC_BOOL mainthread_only);


    }
}