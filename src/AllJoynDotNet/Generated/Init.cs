// Generated from Init.h

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;

namespace AllJoynDotNet
{
//
    public partial class Init : AllJoynWrapper
    {
        internal Init(IntPtr handle) : base(handle) { }
		/// <summary>
		/// This must be called prior to instantiating or using any AllJoyn
		/// functionality.
		/// </summary>
		/// <remarks>
		/// <para>alljoyn_shutdown must be called for each invocation of alljoyn_init.
		/// </para>
		/// </remarks>
		/// <returns>- #ER_OK on success
		/// - error code indicating failure otherwise</returns>
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus alljoyn_init();
		// extern AJ_API QStatus AJ_CALL alljoyn_init(void);

		/// <summary>
		/// Call this to release any resources acquired in alljoyn_init().  No AllJoyn
		/// functionality may be used after calling this.
		/// </summary>
		/// <remarks>
		/// <para>alljoyn_shutdown must be called for each invocation of alljoyn_init.
		/// alljoyn_shutdown must not be called without a prior alljoyn_init call.
		/// </para>
		/// </remarks>
		/// <returns>- #ER_OK on success
		/// - error code indicating failure otherwise</returns>
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus alljoyn_shutdown();
		// extern AJ_API QStatus AJ_CALL alljoyn_shutdown(void);

		/// <summary>
		/// This must be called before using any AllJoyn router functionality.
		/// </summary>
		/// <remarks>
		/// <para>For an application that is a routing node (either standalone or bundled), the
		/// complete initialization sequence is:
		/// </para>
		/// </remarks>
		/// <returns>- #ER_OK on success
		/// - error code indicating failure otherwise</returns>
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus alljoyn_routerinit();
		// extern AJ_API QStatus AJ_CALL alljoyn_routerinit(void);

		/// <summary>
		/// Call this to release any resources acquired in alljoyn_routerinit().
		/// </summary>
		/// <remarks>
		/// <para>For an application that is a routing node (either standalone or bundled), the
		/// complete shutdown sequence is:
		/// </para>
		/// </remarks>
		/// <returns>- #ER_OK on success
		/// - error code indicating failure otherwise</returns>
		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus alljoyn_routershutdown();
		// extern AJ_API QStatus AJ_CALL alljoyn_routershutdown(void);

		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus AllJoynRouterInit();
		// extern AJ_API QStatus AJ_CALL AllJoynRouterInit(void);

		[DllImport(Constants.DLL_IMPORT_TARGET)]
		internal static extern QStatus AllJoynRouterShutdown();
		// extern AJ_API QStatus AJ_CALL AllJoynRouterShutdown(void);


    }
}